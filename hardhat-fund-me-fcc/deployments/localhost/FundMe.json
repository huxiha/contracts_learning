{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x990c5323be76405fec15d6b3455da095057e3cad3e054e5d47af334c8df5e5d0",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "871575",
    "logsBloom": "0x
    "blockHash": "0xcc4525286e8fde80f017e6225e6ee61c8ef5bb6625397ffebcda6c105c46884d",
    "transactionHash": "0x990c5323be76405fec15d6b3455da095057e3cad3e054e5d47af334c8df5e5d0",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "871575",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "017f3ec9157dd27f005b25ec41ea563d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//Get funds from users\\n//Withdraw funds\\n//Set a minimum funding value\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    //some tricks to let the transaction gas down\\n    //858465\\n\\n    using PriceConverter for uint256;\\n    uint256 public constant MINIMUM_USD = 0.05 * 1e18; //after add keyword constant,the transaction gas:838091\\n    address[] public funders;\\n    mapping(address => uint256) public addressToValue;\\n\\n    address public immutable i_owner; //the owner of this contract\\n    AggregatorV3Interface public priceFeed;\\n\\n    //after add keyword immutable,the transaction gas down to 814620\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender; //who deploy this contract\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        // the sending value should greater than 1e18,or this transaction will revert with the error\\n        // require(getConversionRate(msg.value) >= MINIMUM_USD, \\\"Didn't send enough!\\\");\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough!\\\"\\n        ); //use the library for uint256\\n        funders.push(msg.sender);\\n        addressToValue[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        // require(msg.sender == i_owner, \\\"Sender is not the owner!\\\");//only the contract owner can call this function\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funderAddress = funders[funderIndex];\\n            addressToValue[funderAddress] = 0;\\n        }\\n        //reset the array\\n        funders = new address[](0);\\n\\n        //withdraw the funds\\n        //three way to send value\\n        //transfer\\n        // payable(msg.sender).transfer(address(this).balance);//if the transfer fail,this will revert\\n        //send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);//if the send fail,this will not revert,just return false\\n        // require(sendSuccess, \\\"send fail\\\");//if send fail ,using this way to revert\\n        //call\\n        (bool callSuccess /*bytes returnedData*/, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call fail\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"Sender is not the owner!\\\");\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _; //do the rest function code\\n    }\\n\\n    // what happen if someone send eth to this contract withour calling fund function?\\n    // we can still trigger some code\\n    // a special function in solidity called receive(),fallback()\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xd7e19249aad4366dd142562a8e2a4f4a80d632cfa7022c2d8b9b1277f758a161\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        //InterfaceName(Address) return the contract that implement the interface's function\\n        (\\n            ,\\n            /* uint80 roundID */ int256 price /*uint startedAt*/ /*uint timeStamp*/ /*uint80 answeredInRound*/,\\n            ,\\n            ,\\n\\n        ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 etherAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 etherPrice = getPrice(priceFeed);\\n        uint256 etherAmountUSD = (etherAmount * etherPrice) / 1e18;\\n        return etherAmountUSD;\\n    }\\n}\\n\",\"keccak256\":\"0xeb07aa60b500ca12d26cf290b56805eead82442a10e2533b595352a2dbca2685\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405162000fca38038062000fca833981810160405281019061003491906100c7565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b6000815190506100c18161012b565b92915050565b6000602082840312156100dd576100dc610126565b5b60006100eb848285016100b2565b91505092915050565b60006100ff82610106565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610134816100f4565b811461013f57600080fd5b50565b60805160601c610e6262000168600039600081816102e4015261056d0152610e626000f3fe6080604052600436106100745760003560e01c8063b60d42881161004e578063b60d4288146100fa578063bff2e09514610104578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780636b69a592146100a4578063741bef1a146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e2565b005b3480156100b057600080fd5b506100b9610522565b6040516100c691906109b0565b60405180910390f35b3480156100db57600080fd5b506100e461052d565b6040516100f19190610955565b60405180910390f35b6101026101a9565b005b34801561011057600080fd5b5061012b600480360381019061012691906107ba565b610553565b60405161013891906109b0565b60405180910390f35b34801561014d57600080fd5b5061015661056b565b604051610163919061093a565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906107e7565b61058f565b6040516101a0919061093a565b60405180910390f35b66b1a2bc2ec500006101e6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105ce90919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610990565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d991906109e7565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610367576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041257600080828154811061038c5761038b610d18565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040a90610c71565b91505061036a565b50600067ffffffffffffffff81111561042e5761042d610d47565b5b60405190808252806020026020018201604052801561045c5781602001602082028036833780820191505090505b50600090805190602001906104729291906106aa565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049990610925565b60006040518083038185875af1925050503d80600081146104d6576040519150601f19603f3d011682016040523d82523d6000602084013e6104db565b606091505b505090508061051f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051690610970565b60405180910390fd5b50565b66b1a2bc2ec5000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105da8361060a565b90506000670de0b6b3a764000082866105f39190610b85565b6105fd9190610a3d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065357600080fd5b505afa158015610667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068b9190610814565b5050509150506402540be400816106a29190610a6e565b915050919050565b828054828255906000526020600020908101928215610723579160200282015b828111156107225782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ca565b5b5090506107309190610734565b5090565b5b8082111561074d576000816000905550600101610735565b5090565b60008135905061076081610dd0565b92915050565b60008151905061077581610de7565b92915050565b60008135905061078a81610dfe565b92915050565b60008151905061079f81610dfe565b92915050565b6000815190506107b481610e15565b92915050565b6000602082840312156107d0576107cf610d76565b5b60006107de84828501610751565b91505092915050565b6000602082840312156107fd576107fc610d76565b5b600061080b8482850161077b565b91505092915050565b600080600080600060a086880312156108305761082f610d76565b5b600061083e888289016107a5565b955050602061084f88828901610766565b945050604061086088828901610790565b935050606061087188828901610790565b9250506080610882888289016107a5565b9150509295509295909350565b61089881610bdf565b82525050565b6108a781610c3b565b82525050565b60006108ba6000836109cb565b91506108c582610d7b565b600082019050919050565b60006108dd6009836109d6565b91506108e882610d7e565b602082019050919050565b60006109006013836109d6565b915061090b82610da7565b602082019050919050565b61091f81610c1b565b82525050565b6000610930826108ad565b9150819050919050565b600060208201905061094f600083018461088f565b92915050565b600060208201905061096a600083018461089e565b92915050565b60006020820190508181036000830152610989816108d0565b9050919050565b600060208201905081810360008301526109a9816108f3565b9050919050565b60006020820190506109c56000830184610916565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109f282610c1b565b91506109fd83610c1b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a3257610a31610cba565b5b828201905092915050565b6000610a4882610c1b565b9150610a5383610c1b565b925082610a6357610a62610ce9565b5b828204905092915050565b6000610a7982610bf1565b9150610a8483610bf1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ac357610ac2610cba565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b0057610aff610cba565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b3d57610b3c610cba565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b7a57610b79610cba565b5b828202905092915050565b6000610b9082610c1b565b9150610b9b83610c1b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd457610bd3610cba565b5b828202905092915050565b6000610bea82610bfb565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c4682610c4d565b9050919050565b6000610c5882610c5f565b9050919050565b6000610c6a82610bfb565b9050919050565b6000610c7c82610c1b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610caf57610cae610cba565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b7f63616c6c206661696c0000000000000000000000000000000000000000000000600082015250565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b610dd981610bdf565b8114610de457600080fd5b50565b610df081610bf1565b8114610dfb57600080fd5b50565b610e0781610c1b565b8114610e1257600080fd5b50565b610e1e81610c25565b8114610e2957600080fd5b5056fea264697066735822122053c2086884983904e6c32e792d48bb28fc4cbaa4233a9acac5c6a6b06c6c5dcb64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063b60d42881161004e578063b60d4288146100fa578063bff2e09514610104578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780636b69a592146100a4578063741bef1a146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e2565b005b3480156100b057600080fd5b506100b9610522565b6040516100c691906109b0565b60405180910390f35b3480156100db57600080fd5b506100e461052d565b6040516100f19190610955565b60405180910390f35b6101026101a9565b005b34801561011057600080fd5b5061012b600480360381019061012691906107ba565b610553565b60405161013891906109b0565b60405180910390f35b34801561014d57600080fd5b5061015661056b565b604051610163919061093a565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906107e7565b61058f565b6040516101a0919061093a565b60405180910390f35b66b1a2bc2ec500006101e6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105ce90919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610990565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d991906109e7565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610367576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041257600080828154811061038c5761038b610d18565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040a90610c71565b91505061036a565b50600067ffffffffffffffff81111561042e5761042d610d47565b5b60405190808252806020026020018201604052801561045c5781602001602082028036833780820191505090505b50600090805190602001906104729291906106aa565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049990610925565b60006040518083038185875af1925050503d80600081146104d6576040519150601f19603f3d011682016040523d82523d6000602084013e6104db565b606091505b505090508061051f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051690610970565b60405180910390fd5b50565b66b1a2bc2ec5000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105da8361060a565b90506000670de0b6b3a764000082866105f39190610b85565b6105fd9190610a3d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065357600080fd5b505afa158015610667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068b9190610814565b5050509150506402540be400816106a29190610a6e565b915050919050565b828054828255906000526020600020908101928215610723579160200282015b828111156107225782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ca565b5b5090506107309190610734565b5090565b5b8082111561074d576000816000905550600101610735565b5090565b60008135905061076081610dd0565b92915050565b60008151905061077581610de7565b92915050565b60008135905061078a81610dfe565b92915050565b60008151905061079f81610dfe565b92915050565b6000815190506107b481610e15565b92915050565b6000602082840312156107d0576107cf610d76565b5b60006107de84828501610751565b91505092915050565b6000602082840312156107fd576107fc610d76565b5b600061080b8482850161077b565b91505092915050565b600080600080600060a086880312156108305761082f610d76565b5b600061083e888289016107a5565b955050602061084f88828901610766565b945050604061086088828901610790565b935050606061087188828901610790565b9250506080610882888289016107a5565b9150509295509295909350565b61089881610bdf565b82525050565b6108a781610c3b565b82525050565b60006108ba6000836109cb565b91506108c582610d7b565b600082019050919050565b60006108dd6009836109d6565b91506108e882610d7e565b602082019050919050565b60006109006013836109d6565b915061090b82610da7565b602082019050919050565b61091f81610c1b565b82525050565b6000610930826108ad565b9150819050919050565b600060208201905061094f600083018461088f565b92915050565b600060208201905061096a600083018461089e565b92915050565b60006020820190508181036000830152610989816108d0565b9050919050565b600060208201905081810360008301526109a9816108f3565b9050919050565b60006020820190506109c56000830184610916565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109f282610c1b565b91506109fd83610c1b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a3257610a31610cba565b5b828201905092915050565b6000610a4882610c1b565b9150610a5383610c1b565b925082610a6357610a62610ce9565b5b828204905092915050565b6000610a7982610bf1565b9150610a8483610bf1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ac357610ac2610cba565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b0057610aff610cba565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b3d57610b3c610cba565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b7a57610b79610cba565b5b828202905092915050565b6000610b9082610c1b565b9150610b9b83610c1b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd457610bd3610cba565b5b828202905092915050565b6000610bea82610bfb565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c4682610c4d565b9050919050565b6000610c5882610c5f565b9050919050565b6000610c6a82610bfb565b9050919050565b6000610c7c82610c1b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610caf57610cae610cba565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b7f63616c6c206661696c0000000000000000000000000000000000000000000000600082015250565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b610dd981610bdf565b8114610de457600080fd5b50565b610df081610bf1565b8114610dfb57600080fd5b50565b610e0781610c1b565b8114610e1257600080fd5b50565b610e1e81610c25565b8114610e2957600080fd5b5056fea264697066735822122053c2086884983904e6c32e792d48bb28fc4cbaa4233a9acac5c6a6b06c6c5dcb64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 324,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 328,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToValue",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 333,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)102"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)102": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}